# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# SelectWaterArcs_AdaptedForPro.py
# Modified on: 2020-12-01
#   (originally generated by ArcGIS/ModelBuilder 2016-02-01)
# Usage: SelectWaterArcs_Feb2016 <workspace> <landwaterPolygon> <BearingDistance> <SplitLine_center_point> <To_Value> <From_Value> <ResultingWaterArcs> 
# Description: 
# iterative model:
# select a start id, intersect with the land water, select the water arcs, append to extended arcs template.
# November 2015
# modified October 2018
# modified for compatibility with ArcGIS Pro - July 2019
# modified to include writing to memory for selected processes - December 2, 2020

# ---------------------------------------------------------------------------

# Import arcpy module
import os
import sys
import arcpy
from arcpy import env
import datetime

# Set the overwriteOutput to true
env.overwriteOutput = True

# Script arguments
workspace = arcpy.GetParameterAsText(0)
# "C:\\myworkspace\\Exposure_by_County\\Lancaster_2015\\working\\working_Lancaster_FileGDB_v10_1.gdb" 

landwaterPolygon = arcpy.GetParameterAsText(1)
# "Lancaster_FeatureToPoly_Jan_26_2016" 

BearingDistance = arcpy.GetParameterAsText(2)
# "Lancaster_BearingDistance_arcs_Jan_26_2016" 

SplitLine_center_point = arcpy.GetParameterAsText(3)
# "Lancaster_SplitLine_center_point" 

FromValue = arcpy.GetParameterAsText(4)
ToValue = arcpy.GetParameterAsText(5)

WaterArcsTemplate = arcpy.GetParameterAsText(6)
# "Lancaster_water_arcs_Feb_1_2016"

name = arcpy.GetParameterAsText(7)
# "Calvert" 

# Local variables:
date = datetime.date.today().strftime("%m%d%Y")
ResultingWaterArcs = workspace + "\\" + name + "_water_arcs_" + FromValue + "_" + ToValue + "_" + date
arcpy.Copy_management(WaterArcsTemplate, ResultingWaterArcs)

# Set workspace
env.workspace = workspace

# While Loop
count = int(FromValue)
max = int(ToValue)
max = max + 1
while count < max:
    stringCount = str(count)
    arcpy.AddMessage("Processing record number " + stringCount)
    
    # variables
    where_clause = '"ID" = ' + str(count)

    # Select and Intersect
    arcpy.Select_analysis(BearingDistance, r"memory\bearingDist_Select", where_clause)
    arcpy.Intersect_analysis([r"memory\bearingDist_Select",landwaterPolygon], r"memory\bearingDist_Select_Intersect", "ALL", "", "INPUT")
    arcpy.Delete_management(r"memory\bearingDist_Select")

    # Select (surface=water)
    arcpy.Select_analysis(r"memory\bearingDist_Select_Intersect", r"memory\lines_water_sel", "surface = 'water'")
    arcpy.MultipartToSinglepart_management(r"memory\lines_water_sel", r"memory\lines_water_sel_MultipartToSinglepart")
    arcpy.Delete_management(r"memory\bearingDist_Select_Intersect")
    arcpy.Delete_management(r"memory\lines_water_sel")

    # Make Feature Layer
    arcpy.MakeFeatureLayer_management(r"memory\lines_water_sel_MultipartToSinglepart", "lines_water_sel_MultipartToS")

    # Select and Buffer point
    arcpy.Select_analysis(SplitLine_center_point, r"memory\pnt_Select", where_clause)
    arcpy.Buffer_analysis(r"memory\pnt_Select", r"memory\pnt_Select_Buffer", "1 Meters", "FULL", "ROUND", "NONE", "")
    arcpy.Delete_management(r"memory\pnt_Select")

    # Select Layer By Location
    arcpy.SelectLayerByLocation_management("lines_water_sel_MultipartToS", "INTERSECT", r"memory\pnt_Select_Buffer", "", "NEW_SELECTION")

    # Append
    arcpy.Append_management("lines_water_sel_MultipartToS", ResultingWaterArcs, "NO_TEST", "", "")
    arcpy.Delete_management(r"memory\pnt_Select_Buffer")
    arcpy.Delete_management("lines_water_sel_MultipartToS")
    arcpy.Delete_management(r"memory\lines_water_sel_MultipartToSinglepart")

    count = count + 1

# Return output 
arcpy.SetParameterAsText(8, ResultingWaterArcs)

print("process completed") 




